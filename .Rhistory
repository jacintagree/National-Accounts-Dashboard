hp <- ts(houseprices,frequency=4, start=c(2003,3))
hp <- hp[,-1]
hp
plot(hp)
lhp <- log(hp)
plot(lhp)
perth <- lhp[,c("Perth")]
plot(perth)
library("TTR")
# simple moving average
perthMA <- SMA(perth,n=4)
ts.plot(perthMA,perth,gpars= list(col=rainbow(2)))
perthcomponents <- decompose(perth)
perthcomponents
ts.plot(perthcomponents$seasonal,perthcomponents$trend,perthcomponents$random,gpars= list(col=rainbow(3)))
ts.plot(perthcomponents$trend,perthMA,gpars= list(col=rainbow(2)))
source('~/.active-rstudio-document', echo=TRUE)
legend("topleft", legend = 1:10, col = 1:10, lty = 1)
ts.plot(perthcomponents$trend,perthMA,gpars= list(col=rainbow(2)))
legend("topleft", legend = 1:10, col = 1:10, lty = 1)
legend("topleft")
ts.plot(perthcomponents$trend,perthMA,gpars= list(col=rainbow(2)))
legend("topleft", legend = 1:2, col = 1:2, lty = 1)
legend("topleft", colnames(perthcomponents$trend,perthMA), col = 1:2, lty = 1)
ts.plot(perthcomponents$trend,perthMA,gpars= list(col=rainbow(2)))
legend("topleft", c("Trend","MA"), col = 1:2, lty = 1, bty = "n")
ts.plot(perthcomponents$trend,perthMA)
ts.plot(perthcomponents$trend,perthMA,gpars=list(col=1:2))
legend("topleft", c("Trend","MA"), col = 1:2, lty = 1, bty = "n")
ts.plot(perthcomponents$trend,perthMA,gpars=list(col=1:2))
legend("topleft", c("Trend","MA"), col = 1:2, lty = 1, bty = "n")
ts.plot(perthcomponents$trend,perthMA,gpars=list(col=1:2))
legend("topleft", c("Trend","MA"), col = 1:2)
ts.plot(perthcomponents$trend,perthMA,gpars=list(col=1:2))
legend("topleft", c("Trend","MA"), col = 1:2, lty = 1, bty = "n")
perthSA <- perth - perthcomponents$seasonal
ts.plot(perth, perthSA,gpars=list(col=1:2))
legend("topleft", c("Trend","MA"), col = 1:2, lty = 1, bty = "n")
library(caret)
inTrain = createDataPartition(perth, p = 3/4)[[1]]
training = adData[ inTrain,]
training = perth[ inTrain,]
testing = perth[-inTrain,]
training = perth[ inTrain]
testing = perth[-inTrain]
install.packages("Quandl")
library(Quandl)
cashrate <- Quandl("RBA/F01_1_FIRMMCRT", api_key="E6xqr9T32cPzHXZJyPT2")
View(cashrate)
cashrate <- ts(cashrate, start=c(2017,9), frequency = 12,)
cashrate
cashrate <- rev(cashrate)
cashrate
cashrate <- Quandl("RBA/F01_1_FIRMMCRT", api_key="E6xqr9T32cPzHXZJyPT2")
View(cashrate)
cashrate <- ts(cashrate)
cashrate
cashrate <- ts(rev(cashrate), start=c(2017,9), frequency = 12)
cashrate
cashrate <- Quandl("RBA/F01_1_FIRMMCRT", api_key="E6xqr9T32cPzHXZJyPT2")
View(cashrate)
library(Quandl)
cashrate <- Quandl("RBA/F01_1_FIRMMCRT", api_key="E6xqr9T32cPzHXZJyPT2")
cashrate <- ts(rev(cashrate), start=c(1990,8), frequency = 12)
cashrate
library(Quandl)
cashrate <- Quandl("RBA/F01_1_FIRMMCRT", api_key="E6xqr9T32cPzHXZJyPT2")
cashrate <- ts(rev(cashrate), end=c(1990,8), frequency = 12)
cashrate
library(Quandl)
cashrate <- Quandl("RBA/F01_1_FIRMMCRT", api_key="E6xqr9T32cPzHXZJyPT2")
cashrate <- ts(rev(cashrate), start=c(1990,8), frequency = 12)
cashrate
library(Quandl)
cashrate <- Quandl("RBA/F01_1_FIRMMCRT", api_key="E6xqr9T32cPzHXZJyPT2")
cashrate <- ts((cashrate), start=c(1990,8), frequency = 12)
cashrate
cashrate <- Quandl("RBA/F01_1_FIRMMCRT", api_key="E6xqr9T32cPzHXZJyPT2")
cashrate <- Quandl("RBA/F01_1_FIRMMCRT", api_key="E6xqr9T32cPzHXZJyPT2")
colnames[2] <- "cashrate"
colnames(cashrate)[2] <- "cashrate"
cashrate <- Quandl("RBA/F01_1_FIRMMCRT", api_key="E6xqr9T32cPzHXZJyPT2")
colnames(cashrate)[2] <- "cashrate"
colnames(cashrate)[2] <- "cashrate"
cashrate <- Quandl("RBA/F01_1_FIRMMCRT", api_key="E6xqr9T32cPzHXZJyPT2")
colnames(cashrate)[2] <- "cashrate"
View(cashrate)
colnames(cashrate)[2] <- "rate"
colnames(cashrate)[2] <- "cashrate"
cashrate <- ts(rev(cashrate$cashrate), start=c(1990,8), frequency = 12)
cashrate
cashrate <- cashrate[,2]
colnames(cashrate)[2] <- "cashrate"
cashrate <- Quandl("RBA/F01_1_FIRMMCRT", api_key="E6xqr9T32cPzHXZJyPT2")
colnames(cashrate)[2] <- "cashrate"
cashrate <- cashrate[,2]
cashrate <- ts(rev(cashrate$cashrate), start=c(1990,8), frequency = 12)
cashrate <- ts(rev(cashrate), start=c(1990,8), frequency = 12)
cashrate
library(Quandl)
cashrate <- Quandl("RBA/F01_1_FIRMMCRT", api_key="E6xqr9T32cPzHXZJyPT2")
colnames(cashrate)[2] <- "cashrate"
cashrate <- cashrate[,2]
cashrate2 <- ts(rev(cashrate), start=c(1990,8), frequency = 12)
cashrate2
library(Quandl)
cashrate <- Quandl("RBA/F01_1_FIRMMCRT", api_key="E6xqr9T32cPzHXZJyPT2")
colnames(cashrate)[2] <- "cashrate"
cashrate2 <- cashrate[,2]
cashrate2 <- ts(rev(cashrate), start=c(1990,8), frequency = 12)
cashrate2
library(Quandl)
cashrate <- Quandl("RBA/F01_1_FIRMMCRT", api_key="E6xqr9T32cPzHXZJyPT2")
colnames(cashrate)[2] <- "cashrate"
cashrate2 <- cashrate[,2]
cashrate2 <- ts(rev(cashrate2), start=c(1990,8), frequency = 12)
cashrate2
View(cashrate)
cashrate
library(Quandl)
cashrate <- Quandl("RBA/F01_1_FIRMMCRT", api_key="E6xqr9T32cPzHXZJyPT2")
colnames(cashrate)[2] <- "cashrate"
cashrate2 <- cashrate[,2]
cashrate2 <- ts(rev(cashrate2), start=c(1990,8), frequency = 12)
cashrate2
cashrate
cashrate <- xts(rev(cashrate), star=c(1990,8), frequency = 12)
library(Quandl)
library(xts)
cashrate <- Quandl("RBA/F01_1_FIRMMCRT", api_key="E6xqr9T32cPzHXZJyPT2")
colnames(cashrate)[2] <- "cashrate"
cashrate <- cashrate[,2]
cashrate <- xts(rev(cashrate), star=c(1990,8), frequency = 12)
cashrate <- Quandl("RBA/F01_1_FIRMMCRT", api_key="E6xqr9T32cPzHXZJyPT2")
colnames(cashrate)[2] <- "cashrate"
View(cashrate)
xts(cashrate, order.by=as.Date(rownames(cashrate),"$Y-%m-%d"))
xts(cashrate, order.by=as.Date(rownames(cashrate),"%Y-%m-%d"))
cashrate <- Quandl("RBA/F01_1_FIRMMCRT", api_key="E6xqr9T32cPzHXZJyPT2", type = "xts")
hp <- xts(houseprices,frequency=4, start=c(2003,3))
cashrate <- Quandl("RBA/F01_1_FIRMMCRT", api_key="E6xqr9T32cPzHXZJyPT2", type = "ts")
cashrate
ts1<-as.xts(cashrate)
ts2<-as.xts(perth)
str(ts3 <- c(ts1, ts2))
View(ts3)
ts1<-as.xts(cashrate)
ts2<-as.xts(perth)
str(ts3 <- c(ts1, ts2))
View(ts3)
atco <- merge.zoo(cashrate, perth)
atco
# clear all
rm(list =ls())
# library
library(readxl)
# data
houseprices <-
read_excel("~/Google Drive/2017 Sem 2/House prices forecast/641601.xls",sheet = "Data1",
na = "empty",
skip = 9
)
colnames(houseprices)[2] <- "Sydney"
colnames(houseprices)[3] <- "Melbourne"
colnames(houseprices)[4] <- "Brisbane"
colnames(houseprices)[5] <- "Adelaide"
colnames(houseprices)[6] <- "Perth"
colnames(houseprices)[7] <- "Hobart"
colnames(houseprices)[8] <- "Darwin"
colnames(houseprices)[9] <- "Canberra"
houseprices <- houseprices[,1:9]
# time series data
hp <- ts(houseprices,frequency=4, start=c(2003,3))
hp <- hp[,-1]
hp
# clear all
rm(list =ls())
# library
library(readxl)
# data
houseprices <-
read_excel("~/Google Drive/2017 Sem 2/House prices forecast/641601.xls",sheet = "Data1",
na = "empty",
skip = 9
)
colnames(houseprices)[2] <- "Sydney"
colnames(houseprices)[3] <- "Melbourne"
colnames(houseprices)[4] <- "Brisbane"
colnames(houseprices)[5] <- "Adelaide"
colnames(houseprices)[6] <- "Perth"
colnames(houseprices)[7] <- "Hobart"
colnames(houseprices)[8] <- "Darwin"
colnames(houseprices)[9] <- "Canberra"
houseprices <- houseprices[,1:9]
# time series data
hp <- xts(houseprices,frequency=4, start=c(2003,3))
# clear all
rm(list =ls())
# library
library(readxl)
# data
houseprices <-
read_excel("~/Google Drive/2017 Sem 2/House prices forecast/641601.xls",sheet = "Data1",
na = "empty",
skip = 9
)
colnames(houseprices)[2] <- "Sydney"
colnames(houseprices)[3] <- "Melbourne"
colnames(houseprices)[4] <- "Brisbane"
colnames(houseprices)[5] <- "Adelaide"
colnames(houseprices)[6] <- "Perth"
colnames(houseprices)[7] <- "Hobart"
colnames(houseprices)[8] <- "Darwin"
colnames(houseprices)[9] <- "Canberra"
houseprices <- houseprices[,1:9]
# time series data
#hp <- xts(houseprices,frequency=4, start=c(2003,3))
#xts(houseprices, order.by=as.POSIXct(table$Date))
hp
View(houseprices)
# clear all
rm(list =ls())
# library
library(readxl)
# data
houseprices <-
read_excel("~/Google Drive/2017 Sem 2/House prices forecast/641601.xls",sheet = "Data1",
na = "empty",
skip = 9
)
colnames(houseprices)[1] <- "Date"
colnames(houseprices)[2] <- "Sydney"
colnames(houseprices)[3] <- "Melbourne"
colnames(houseprices)[4] <- "Brisbane"
colnames(houseprices)[5] <- "Adelaide"
colnames(houseprices)[6] <- "Perth"
colnames(houseprices)[7] <- "Hobart"
colnames(houseprices)[8] <- "Darwin"
colnames(houseprices)[9] <- "Canberra"
houseprices <- houseprices[,1:9]
# time series data
#hp <- xts(houseprices,frequency=4, start=c(2003,3))
#xts(houseprices, order.by=as.POSIXct(table$Date))
hp
hp <- xts(houseprices, order.by=as.POSIXct(houseprices$Date))
View(hp)
hp < hp[,-1]
hp <- hp[,-1]
View(hp)
plot(hp)
xts.plot(hp)
plot(hp)
View(hp)
hp <- xts(houseprices, order.by=as.POSIXct(houseprices$Date))
plot(hp)
View(hp)
plot.xts(hp)
hp <- xts(houseprices, order.by="%Y-%m-%d")
is.xts(hp)
plot.xts(hp)
hp <- hp[,-1]
is.xts(hp)
plot(hp, screens=factor(1, 1), auto.legend=TRUE)
View(houseprices)
hp <- xts(houseprices, order.by=as.POSIXct(houseprices$Date),frequency = 4)
View(hp)
hp <- hp[,-1]
is.xts(hp)
plot(hp, screens=factor(1, 1), auto.legend=TRUE)
plot(hp, auto.legend=TRUE)
data(sample_matrix)
sample.xts <- as.xts(sample_matrix, descr='my new xts object')
plot(sample.xts, auto.legend=TRUE)
View(sample.xts)
hp <- as.xts(houseprices)
hp <- as.xts(hp)
View(hp)
is.xts(hp)
plot(hp, auto.legend=TRUE)
plot(hp, auto.legend=TRUE)
View(hp)
houseprices <- houseprices[,1:9]
# clear all
rm(list =ls())
# library
library(readxl)
# data
houseprices <-
read_excel("~/Google Drive/2017 Sem 2/House prices forecast/641601.xls",sheet = "Data1",
na = "empty",
skip = 9
)
colnames(houseprices)[1] <- "Date"
colnames(houseprices)[2] <- "Sydney"
colnames(houseprices)[3] <- "Melbourne"
colnames(houseprices)[4] <- "Brisbane"
colnames(houseprices)[5] <- "Adelaide"
colnames(houseprices)[6] <- "Perth"
colnames(houseprices)[7] <- "Hobart"
colnames(houseprices)[8] <- "Darwin"
colnames(houseprices)[9] <- "Canberra"
houseprices <- houseprices[,1:9]
# time series data
hp <- xts(houseprices, order.by=as.POSIXct(houseprices$Date))
hp <- as.xts(hp)
is.xts(hp)
data(sample_matrix)
sample.xts <- as.xts(sample_matrix, descr='my new xts object')
plot(hp, auto.legend=TRUE)
View(hp)
hp <- as.xts(houseprices)
hp <- as.xts(houseprices, order.by=as.POSIXct(houseprices$Date))
plot(hp, auto.legend=TRUE)
plot(hp, auto.legend=TRUE)
View(hp)
class(houseprices)
require(xts)
hp <- as.xts(houseprices, order.by=as.POSIXct(houseprices$Date))
is.xts(hp)
plot(hp, auto.legend=TRUE)
plot(as.matrix(hp), auto.legend=TRUE)
hp <- as.xts(houseprices, dateFormat = "Date")
View(houseprices)
hp <- as.xts(houseprices, dateFormat = 'Date')
hp <- as.xts(houseprices, dateFormat = '%Y-%m-%d')
View(sample.xts)
View(houseprices)
View(sample.xts)
View(houseprices)
View(hp)
hp <- ts(houseprices,frequency=4, start=c(2003,3))
plot(hp)
hp <- hp[,-1]
hp <- hp[,-1]
plot(hp)
plot(hp,plot.type = "single")
plot(hp,plot.type = "single", auto.legend="TRUE")
qplot(hp)
library(ggplot2)
qplot(hp)
plot(hp,plot.type = "single", col=hp)
plot(hp,plot.type = "single", col=[1:8])
plot(hp,plot.type = "single", col=1:8)
plot(hp)
# lhp <- log(hp)
# plot(lhp)
perth <- lhp[,c("Perth")]
perth <- hp[,c("Perth")]
plot(perth)
library("TTR")
# simple moving average
perthMA <- SMA(perth,n=4)
ts.plot(perthMA,perth,gpars= list(col=rainbow(2)))
perthcomponents <- decompose(perth)
perthcomponents
ts.plot(perthcomponents$seasonal,perthcomponents$trend,perthcomponents$random,gpars= list(col=rainbow(3)))
perthSA <- perth - perthcomponents$seasonal
ts.plot(perth, perthSA,gpars=list(col=1:2))
legend("topleft", c("Trend","MA"), col = 1:2, lty = 1, bty = "n")
ts.plot(perthcomponents$trend,perthMA,gpars=list(col=1:2))
legend("topleft", c("Trend","MA"), col = 1:2, lty = 1, bty = "n")
library(Quandl)
library(xts)
cashrate <- Quandl("RBA/F01_1_FIRMMCRT", api_key="E6xqr9T32cPzHXZJyPT2", type = "ts")
atco <- merge.zoo(cashrate, perth,)
library(Quandl)
library(xts)
cashrate <- Quandl("RBA/F01_1_FIRMMCRT", api_key="E6xqr9T32cPzHXZJyPT2", type = "ts")
atco <- merge.zoo(cashrate, perth)
atco
library(caret)
inTrain = createDataPartition(perth, p = 3/4)[[1]]
training = perth[ inTrain]
testing = perth[-inTrain]
#mod1 <- train()
mod1 <- train(perth~.,method="glm",data="training")
ts.plot(perth, perthSA,gpars=list(col=1:2))
legend("topleft", c("Trend","MA"), col = 1:2, lty = 1, bty = "n")
library(Quandl)
library(xts)
cashrate <- Quandl("RBA/F01_1_FIRMMCRT", api_key="E6xqr9T32cPzHXZJyPT2", type = "ts")
df <- merge.zoo(cashrate, perth)
df
library(caret)
inTrain = createDataPartition(df, p = 3/4)[[1]]
library(caret)
inTrain = createDataPartition(df, p = 3/4)[[1]]
inTrain = createDataPartition(df, p = 3/4,na.rm=TRUE)[[1]]
inTrain = createDataPartition(df, p = 3/4)[[1]]
inTrain = createDataPartition(df, p = 3/4)
dim(training)
dim(df)
training = df[ 200]
training = df[200,]
training = df[1:200,]
training <- df[1:200,]
training
dim(df)
training <- df[201:326,]
preProcValues <- preProcess(training, method = c("knnImpute")) # have to apply this to testing set too.
df <- complete.cases(df)
dim(df)
dim(df)
complete.cases(df)
df <- complete.cases(df)
dim(df)
library(Quandl)
library(xts)
cashrate <- Quandl("RBA/F01_1_FIRMMCRT", api_key="E6xqr9T32cPzHXZJyPT2", type = "ts")
df <- merge.zoo(cashrate, perth)
library(caret)
dim(df)
df <- complete.cases(df)
dim(df)
# inTrain = createDataPartition(df, p = 3/4)
training <- df[1:200,]
library(Quandl)
library(xts)
cashrate <- Quandl("RBA/F01_1_FIRMMCRT", api_key="E6xqr9T32cPzHXZJyPT2", type = "ts")
df <- merge.zoo(cashrate, perth)
dim(df)
complete.cases(df)
df <- df[complete.cases(df),]
dim(df)
library(Quandl)
library(xts)
cashrate <- Quandl("RBA/F01_1_FIRMMCRT", api_key="E6xqr9T32cPzHXZJyPT2", type = "ts")
df <- merge.zoo(cashrate, perth)
library(caret)
dim(df)
df <- df[complete.cases(df),]
dim(df)
# inTrain = createDataPartition(df, p = 3/4)
training <- df[1:35,]
testing <- df[36:56,]
#preProcValues <- preProcess(training, method = c("knnImpute")) # have to apply this to testing set too.
#training2 <- predict(preProcValues, training)
mod1 <- train(df~.,method="glm",data=training)
mod1 <- train(perth~.,method="glm",data=training)
mod1
plot(mod1)
plot(mod1$results)
plot(mod1$finalModel)
mod1$finalModel
summary(mod1$finalModel)
plot(training$perth,training$cashrate)
income <- Quandl("AUSBS/5204001_KEY_NATIONAL_AGGREGATES_A2420637R", api_key="E6xqr9T32cPzHXZJyPT2", type ="ts") # real net disposable income
library(Quandl)
library(xts)
cashrate <- Quandl("RBA/F01_1_FIRMMCRT", api_key="E6xqr9T32cPzHXZJyPT2", type = "ts")
income <- Quandl("AUSBS/5204001_KEY_NATIONAL_AGGREGATES_A2420637R", api_key="E6xqr9T32cPzHXZJyPT2", type ="ts") # real net disposable income
df <- merge.zoo(perth, cashrate, income)
income <- Quandl("AUSBS/5204001_KEY_NATIONAL_AGGREGATES_A2420637R", api_key="E6xqr9T32cPzHXZJyPT2", type ="ts") # real net disposable income
income
library(Quandl)
library(xts)
cashrate <- Quandl("RBA/F01_1_FIRMMCRT", api_key="E6xqr9T32cPzHXZJyPT2", type = "ts")
income <- Quandl("AUSBS/5206001_KEY_AGGREGATES_A2304416L", api_key="E6xqr9T32cPzHXZJyPT2", type ="ts") # real net disposable income
income
df <- merge.zoo(perth, cashrate, income)
df <- merge.zoo(perth, cashrate, income)
df <- merge.zoo(perth, income)
df <- merge.zoo(df, cashrate)
df <- merge.zoo(perth, income)
df
df <- merge.zoo(df, cashrate)
df <- merge.zoo(cashrate, income)
df <- merge.zoo(df, perth)
df
df <- df[complete.cases(df),]
dim(df)
#preProcValues <- preProcess(training, method = c("knnImpute")) # have to apply this to testing set too.
#training2 <- predict(preProcValues, training)
mod1 <- train(perth~.,method="glm",data=training)
plot(mod1$finalModel)
summary(mod1$finalModel)
plot(training$perth,training$cashrate)
training
df
library(caret)
dim(df)
# inTrain = createDataPartition(df, p = 3/4)
training <- df[1:35,]
testing <- df[36:56,]
training
#preProcValues <- preProcess(training, method = c("knnImpute")) # have to apply this to testing set too.
#training2 <- predict(preProcValues, training)
mod1 <- train(perth~.,method="glm",data=training)
plot(mod1$finalModel)
summary(mod1$finalModel)
#plot(training$perth,training$cashrate)
pred1 <- predict(mod1, training)
plot(pred1)
plot(pred1,training$perth)
plot(pred1,training$perth)
plot(pred1,training$perth)
plot(pred1,training$perth, type = "single")
plot(pred1,training$perth)
plot(as.ts(pred1),training$perth)
pred1
pred1 <- ts(pred1)
pred1
fit <- ets(perth)
library(forecast)
fit <- ets(perth)
fit
source('~/Sites/natacc-all/natacc.R', echo=TRUE)
download.file(url = "http://www.abs.gov.au/ausstats/meisubs.NSF/log?openagent&5206001_key_aggregates.xls&5206.0&Time%20Series%20Spreadsheet&24FF946FB10A10CDCA258192001DAC4B&0&Jun%202017&06.09.2017&Latest",mode = "wb",destfile = "5206.xls")
abs <- read_excel("5206.xls", sheet = "Data1", skip = 9)
source('~/Sites/natacc-all/natacc.R', echo=TRUE)
getwd()
source('~/Sites/natacc-all/natacc.R', echo=TRUE)
